# Generated by Django 3.0.8 on 2020-07-28 15:14

import datetime
from django.db import migrations, models
import django.db.models.manager
import utils.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('social', models.CharField(blank=True, choices=[('KAKAO', 'kakao'), ('NAVER', 'naver'), ('APPLE', 'apple'), ('NONE', 'none')], default='NONE', max_length=20, null=True)),
                ('nickname', models.CharField(default='', max_length=30)),
                ('birth_day', models.DateField(default=datetime.date(1900, 1, 1))),
                ('profile', models.ImageField(blank=True, null=True, upload_to=utils.utils.create_upload_path)),
                ('bio', models.TextField(blank=True, max_length=300, null=True)),
                ('created_date', models.DateField(auto_now=True)),
                ('last_login_date', models.DateTimeField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
    ]
